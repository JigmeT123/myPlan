{"version":3,"sources":["Components/layouts/signInLinks.js","Components/store/actions/authAction.js","Components/layouts/SignOutLinks.js","Components/layouts/NavBars.js","Components/DashBoard/Notification.js","Components/projects/projectSummary.js","Components/projects/projectList.js","Components/DashBoard/dashboard.js","Components/projects/projectsDetails.js","Components/auth/SignIn.js","Components/auth/SignUp.js","Components/projects/createProject.js","Components/store/actions/projectAction.js","App.js","serviceWorker.js","Components/store/reducers/authReducer.js","Components/store/reducers/projectReducer.js","Components/store/reducers/rootReducer.js","config/fbconfig.js","index.js"],"names":["connect","dispatch","logOut","getState","getFirebase","auth","signOut","then","type","props","className","to","onClick","profile","initials","SignedOut","state","firebase","links","uid","Notification","notifications","map","item","key","id","user","content","moment","time","toDate","toString","fromNow","projectSummary","project","title","authFirstName","authLastName","createdAt","calendar","ProjectList","projects","DashBoard","this","Component","compose","firestoreConnect","collection","orderBy","limit","firestore","ordered","ownProps","match","params","data","SignIn","email","password","handleSubmit","e","preventDefault","signIn","handleChange","setState","target","value","authError","onSubmit","htmlFor","onChange","authReducer","creds","credential","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","newUsers","getFirestore","createUserWithEmailAndPassword","response","doc","set","CreateProject","createProject","history","push","authId","add","authorId","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","stateInit","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbconfig","useFirestoreForProfile","userProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","StrictMode","document","getElementById","console","log","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.ba4de23c.chunk.js","sourcesContent":["import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {signOut} from '../store/actions/authAction';\nconst SignedLinks = (props)=> {\n    return(\n    <ul className=\"right\">\n        <li><NavLink to='/create'>New Project</NavLink></li>\n        <li><a onClick={props.logOut}>Log Out</a></li>\n        <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink></li>\n    </ul>\n    );\n}\n\nconst mapsDispatchToProps = (dispatch) => {\n    return {\n        logOut: () => dispatch(signOut())\n    }\n}\nexport default connect(null, mapsDispatchToProps)(SignedLinks);","export const signIn = (credential) => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n        firebase.auth().signInWithEmailAndPassword(\n            credential.email,\n            credential.password\n        ).then(()=>{\n           dispatch({type: \"LOGIN_SUCCESS\"})\n        }\n        ).catch(err => {\n            dispatch({type: \"LOGIN_ERROR\"}, err);    \n        })\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n        firebase.auth().signOut().then(()=>{\n            dispatch({type: \"LOG_OUT_SUCCESS\"})\n        });\n    }\n}\n\nexport const signUp = (newUsers) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUsers.email,\n            newUsers.password\n        ).then(response => {\n            return firestore.collection('users').doc(response.user.uid).set({\n                firstName: newUsers.firstName,\n                lastName: newUsers.lastName,\n                initials: newUsers.firstName[0] + newUsers.lastName[0]\n            })\n        }).then(()=>{\n            dispatch({type:'SIGNUP_SUCCESS'})\n        }).catch(err=>{\n            dispatch({type: 'SIGNUP_ERROR', err}) \n        })\n    }\n}\n\n","import React from 'react';\nimport {NavLink} from 'react-router-dom';\n \nconst SignedOut = ()=> {\n    return(\n    <ul className=\"right\">\n        <li><NavLink to='/signup'>Sign Up</NavLink></li>\n        <li><NavLink to='/signin'>Sign In</NavLink></li>\n    </ul>\n        \n    );\n}\n\nexport default SignedOut;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport SignedLinks from './signInLinks';\nimport SignedOut from './SignOutLinks';\n\nconst NavBar = (props) => {\n    const {auth, profile} = props;\n    const links = auth.uid ? <SignedLinks profile={profile}/>:<SignedOut />;\n    return (\n        <nav className=\"nav-wrapper grey darken-3\">\n            <div className=\"container\">\n                <Link to='/' className=\"brand-logo\">myPlan</Link>\n                <ul className=\"right\">\n                    {links}\n                </ul>\n            </div>\n        </nav>\n    );\n}\nconst mapsStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    };\n}\nexport default connect(mapsStateToProps)(NavBar);","import React from 'react';\nimport moment from 'moment';\n\nconst Notification = (props) => {\n    const {notifications} = props;\n    return(\n        <div className=\"section\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">Notifications</span>\n                    <ul className=\"notifications\">\n                        {notifications&&notifications.map( item => {\n                            return (\n                            <li key={item.id}>\n                                <span className='pink-text'>{item.user}</span>\n                                <span >{item.content}</span>\n                                <div className=\"grey-text note-date\">\n                                    {moment(item.time.toDate().toString()).fromNow()}\n                                </div>\n                            </li>\n                            )\n                        })}\n                    </ul>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Notification;","import React from 'react';\nimport moment from 'moment'\nconst projectSummary = ({project}) => {\n    return (\n        <div className=\"card z-depth-0 projectSummary\">\n            <div className=\"card-content grey-text text-darken-3\">\n                <span className=\"card-title\">{project.title}</span>\n                <p>Posted By {project.authFirstName}\n                    {project.authLastName}</p>\n                <p className=\"grey-text\">{moment(project.createdAt.toDate().toString()).calendar()}</p>\n            </div>\n        </div>\n    );\n}\nexport default projectSummary;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport ProjectSummary from './projectSummary';\nconst ProjectList = ({projects}) => {\n    return (\n        <div className=\"project-list section\">\n           {projects && projects.map(project => {\n               return(\n                <Link to={'/project/'+ project.id} key={project.id}>\n                   <ProjectSummary project={project}/>\n                </Link>\n               );\n           })}\n     \n        </div>\n    );\n}\n\nexport default ProjectList;","import React, {Component} from 'react';\nimport Notification from './Notification';\nimport ProjectList from '../projects/projectList';\nimport {connect} from 'react-redux'\nimport {firestoreConnect} from 'react-redux-firebase';\nimport {compose} from 'redux';\nimport {Redirect} from 'react-router-dom'\n\nclass DashBoard extends Component{\n    \n    state = {\n        title:'',\n        content : '',\n    }\n    render(){\n        const {projects, auth, notifications} = this.props;\n        if(!auth.uid) return <Redirect to ='/signin' />\n        return(     \n            <div className=\"container dashboard\">\n                <div className='row'>\n                    <div className='col s12 m6'>\n                        <ProjectList projects={projects}/>\n                    </div>\n                    <div className='col s12 m5 offset-m1'>\n                        <Notification notifications={notifications}/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        projects: state.firestore.ordered.projects,\n        auth: state.firebase.auth,\n        notifications: state.firestore.ordered.notifications,\n    }\n}\nexport default compose(\n    firestoreConnect([\n        {collection: 'projects',  orderBy: ['createdAt', 'desc']},\n        {collection: \"notifications\", limit: 3, orderBy: ['time', 'desc']}\n    ]),\n    connect(mapStateToProps),\n)(DashBoard);","import React from 'react';\nimport {compose} from 'redux';\nimport {connect} from 'react-redux';\nimport {firestoreConnect} from 'react-redux-firebase';\nimport { Redirect } from 'react-router-dom';\nimport moment from 'moment';\n\nconst ProjectDetails = (props) => {\n    const {project, auth} = props;\n    if(!auth.uid) return <Redirect to='/signin'/>\n    if (project) {\n        return (\n            <div className='container section project-details'>\n                <div className='card z-depth-0'>\n                    <div className=\"card-content\">\n                        <span className=\"card-title\">Project Title - {project.title}</span>\n                        <p>{project.content}\n                        </p>\n                    </div>\n                    <div className=\"card-action grey lighten-4 grey-text\">\n                        <div>Posted by {project.authFirstName} {project.authLastName}</div>\n                        <p>{moment(project.createdAt.toDate().toString()).calendar()}</p>\n                    </div>\n                </div>\n            </div>\n        );\n    }else{\n        return(\n            <div className='container center'>\n                <h3 className='white-text'>Loading Project...</h3>\n            </div>\n        );\n    }\n\n}\nconst mapsStateToProps = (state, ownProps) => {\n    const id = ownProps.match.params.id;\n    return {\n        project: state.firestore.data.projects && state\n            .firestore\n            .data\n            .projects[id],\n        // Not state.firestore.ordered as a single project document will be fetched so\n        // technically there is no order needed. If you still want\n        // state.firestore.ordered, you can try the following: project:\n        // state.firestore.ordered.project[0] But be aware that ordered will have just\n        // one document so you will need extra [0]\n        auth: state.firebase.auth,\n    }\n}\nexport default compose(connect(mapsStateToProps), firestoreConnect([\n    {\n        collection: 'projects'\n    }\n]),)(ProjectDetails);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {signIn} from '../store/actions/authAction'\nimport { Redirect } from 'react-router-dom';\nclass SignIn extends Component {\n    state = {\n        email: '',\n        password: ''\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this\n            .props\n            .signIn(this.state);\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    render() {\n        const {authError, auth} = this.props;\n        if(auth.uid) return <Redirect to='/'/>\n        return (\n            <div className='container'>\n                <form onSubmit={this.handleSubmit}>\n                    <h4 className=\"grey-text text-darken-3\">Sign In</h4>\n\n                    <div className='input-field'>\n                        <label className='grey-text text-darken-3' htmlFor='email'>Email:</label>\n                        <input type='email' id='email' onChange={this.handleChange}></input>\n                    </div>\n\n                    <div className='input-field'>\n                        <label className='grey-text text-darken-3' htmlFor='password'>Password:</label>\n                        <input type='password' id='password' onChange={this.handleChange}></input>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className='btn pink lighten-1 z-depth-0'>Log In</button>\n                    </div>\n                    <div className=\"red-text center\">\n                        {\n                            authError\n                                ? <p>{authError}</p>\n                                : null\n                        }\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (creds) => {\n            dispatch(signIn(creds))\n        }\n    }\n}\nconst mapStateToProps = (state) => {\n    return{\n        authError : state.authReducer.authError,\n        auth: state.firebase.auth\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import React, {Component} from 'react';\nimport {Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {signUp} from '../store/actions/authAction';\nclass SignUp extends Component {\n    state = {\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: ''\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this\n            .props\n            .signUp(this.state);\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    render() {\n        const {auth, authError} = this.props;\n        if (auth.uid) \n            return <Redirect to='/'/>\n        return (\n            <div className='container'>\n                <form onSubmit={this.handleSubmit}>\n                    <h4 className=\"grey-text text-darken-3\">Sign Up</h4>\n\n                    <div className='input-field'>\n                        <label className='grey-text text-darken-3' htmlFor='email'>Email:</label>\n                        <input type='email' id='email' onChange={this.handleChange}></input>\n                    </div>\n\n                    <div className='input-field'>\n                        <label className='grey-text text-darken-3' htmlFor='password'>New Password:</label>\n                        <input\n                            className='grey-text text-darken-3'\n                            type='password'\n                            id='password'\n                            onChange={this.handleChange}></input>\n                    </div>\n\n                    <div className='input-field'>\n                        <label className='grey-text text-darken-3' htmlFor='firstName'>First Name:</label>\n                        <input type='text' id='firstName' onChange={this.handleChange}></input>\n                    </div>\n\n                    <div className='input-field'>\n                        <label className='grey-text text-darken-3' htmlFor='lastName'>Last Name:</label>\n                        <input type='text' id='lastName' onChange={this.handleChange}></input>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className='btn pink lighten-1 z-depth-0'>Log In</button>\n                    </div>\n                    <div className=\"red-text center\">\n                        {\n                            authError\n                                ? <p>{authError}</p>\n                                : null\n                        }\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return {auth: state.firebase.auth, authError: state.authReducer.authError}\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React, {Component} from 'react';\nimport {createProject} from '../store/actions/projectAction';\nimport {connect} from 'react-redux'\nimport { Redirect } from 'react-router-dom';\n\nclass CreateProject extends Component {\n    state = {\n        title: '',\n        content: ''\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.createProject(this.state);\n        this.props.history.push('/');\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    render() {\n        const {auth} = this.props;\n        if(!auth.uid) return <Redirect to='/signin'/>\n        return (\n            <div className='container'>\n                <form onSubmit={this.handleSubmit} >\n                    <h4 className=\"grey-text text-darken-3\">Create Project</h4>\n                    <div className='input-field'>\n                        <label className='grey-text text-darken-3' htmlFor='title'>Title Of The Project</label>\n                        <input type='text' id='title' onChange={this.handleChange}></input>\n                    </div>\n                    <div className='input-field'>\n                        <label className='grey-text text-darken-3' htmlFor='content'>Description Of The Project:</label>\n                        <textarea className='materialize-textarea' type='text' id='content' onChange={this.handleChange}></textarea>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className='btn pink lighten-1 z-depth-0'>Create</button>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createProject : (project) => dispatch(createProject(project))\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);","export const createProject = (project) => {\n    return (dispatch, getState, { getFirestore}) => {\n       //make async call to database\n       const firestore = getFirestore();\n       const profile = getState().firebase.profile;\n       const authId = getState().firebase.auth.uid;\n       firestore.collection('projects').add({\n           ...project,\n          authFirstName: profile.firstName,\n          authLastName: profile.lastName,\n          authorId: authId,\n          createdAt: new Date()\n       }).then(() => {\n        dispatch({type:'CREATE_PROJECT', project}); \n       }).catch((err)=>{\n        dispatch({type: \"CREATE_PROJECT_ERROR\", err});\n       })\n      \n    }\n}\n\n","import React, {Component} from 'react';\nimport {Route, BrowserRouter, Switch} from 'react-router-dom';\nimport NavBar from './Components/layouts/NavBars';\nimport DashBoard from './Components/DashBoard/dashboard';\nimport ProjectDetails from './Components/projects/projectsDetails';\nimport SignIn from './Components/auth/SignIn';\nimport SignUp from './Components/auth/SignUp';\nimport CreateProject from './Components/projects/createProject';\n\n\nclass App extends Component {\n  \n    render() {\n      \n      return (\n        <BrowserRouter>\n        <div className='app'>\n          <NavBar />\n          <Switch>\n          <Route exact path='/' component={DashBoard}></Route>\n          <Route path='/project/:id' component={ProjectDetails}></Route>\n          <Route path='/signin' component={SignIn}></Route>\n          <Route path='/signup' component={SignUp}></Route>\n          <Route path='/create' component={CreateProject}></Route>\n          </Switch>\n        </div>\n        </BrowserRouter>\n      );\n       \n    };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const stateInit = {\n    authError: null,\n}\n\n\nconst authReducer = (state= stateInit, action) => {\n    switch(action.type){\n        case 'LOGIN_SUCCESS':\n            return{\n                ...state,\n                authError: null,\n            };\n            case 'LOGIN_ERROR':\n                return {\n                    ...state,\n                    authError: \"Log In Failed\",\n                }\n            case 'LOG_OUT_SUCCESS':\n                return state\n            default:\n                return state;\n            case 'SIGNUP_SUCCESS':\n                return {\n                    ...state,\n                    authError: null\n                }\n                case 'SIGNUP_ERROR':\n                    return {\n                        ...state,\n                        authError: action.err.message\n                    }\n    }\n}\n\nexport default authReducer;","const stateInit = {\n    projects: [\n        {\n            id: '1',\n            title: 'help me find peach',\n            content: 'blah blah blah'\n        }, {\n            id: '2',\n            title: 'collect all the stars',\n            content: 'blah blah blah'\n        }, {\n            id: '3',\n            title: 'egg hunt with yoshi',\n            content: 'blah blah blah'\n        }\n    ]\n}\n\nconst projectReducer = (state = stateInit, action) => {\n\n    switch(action.type){\n        case 'CREATE_PROJECT':\n            return state\n        case 'CREATE_PROJECT_ERROR':\n            return state\n        default:\n            return state\n    }\n}\n\nexport default projectReducer;","import authReducer from './authReducer';\nimport projectReducer from './projectReducer';\nimport {combineReducers} from 'redux';\nimport {firestoreReducer} from 'redux-firestore';\nimport {firebaseReducer} from 'react-redux-firebase';\n\nconst rootReducer = combineReducers({\n    authReducer,\n    projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer,\n})\n\nexport default rootReducer;","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCOXFwlTsGp71aZQh9TQ-xj3EK_8NE5e5I\",\n    authDomain: \"myplan-3859b.firebaseapp.com\",\n    databaseURL: \"https://myplan-3859b.firebaseio.com\",\n    projectId: \"myplan-3859b\",\n    storageBucket: \"myplan-3859b.appspot.com\",\n    messagingSenderId: \"513052875792\",\n    appId: \"1:513052875792:web:9373fdf4eee45534393e95\",\n    measurementId: \"G-D15Q23DY7C\"\n  };\n  firebase.initializeApp(firebaseConfig);\n\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware, compose} from 'redux'\nimport rootReducer from './Components/store/reducers/rootReducer';\nimport thunk from 'redux-thunk'\nimport {reduxFirestore, getFirestore} from 'redux-firestore';\nimport { getFirebase, reactReduxFirebase} from 'react-redux-firebase';\nimport fbconfig from './config/fbconfig'\n\nconst store = createStore(rootReducer, compose(\n  applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n  reactReduxFirebase(fbconfig,{useFirestoreForProfile: true,userProfile:\"users\",attachAuthIsReady: true}),\n  reduxFirestore(fbconfig),\n\n));\n\nstore.firebaseAuthIsReady.then(()=>{\n  ReactDOM.render(\n    <React.StrictMode>\n     <Provider store={store}>\n       <App />\n       </Provider> \n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n}).catch((err)=>{\n  console.log('error in loading the firebase');\n})\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}